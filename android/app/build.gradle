def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
// 导入MobSDK
//apply plugin: 'com.mob.sdk'


android {
    compileSdkVersion 34
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }

    // packagingOptions {
    //     exclude 'assets/*'
    //     exclude 'assets/*/*/*'
    //     exclude 'assets/*/*/*/*'
    //     exclude 'lib/arm64-v8a/libindoor.so'
    // }

    signingConfigs {
        release {
            keyAlias 'key'
            keyPassword '123456'
            storeFile file('key.jks')
            storePassword '123456'
        }
        debug {
            keyAlias 'key'
            keyPassword '123456'
            storeFile file('key.jks')
            storePassword '123456'
        }
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.flutter.demo"
        minSdkVersion 22
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters "arm64-v8a", "armeabi-v7a", "x86_64"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
            shrinkResources false
            //是否启动混淆 ture:打开   false:关闭
            minifyEnabled false
            // proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
